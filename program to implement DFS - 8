Write the python program to implement DFS.





from collections import defaultdict

class Graph:
    def __init__(self):
        self.graph = defaultdict(list)

    def add_edge(self, u, v):
        self.graph[u].append(v)

    def dfs_util(self, vertex, visited, traversal):
        visited.add(vertex)
        traversal.append(vertex)

        for neighbor in self.graph[vertex]:
            if neighbor not in visited:
                self.dfs_util(neighbor, visited, traversal)

    def dfs(self, start):
        visited = set()
        traversal = []

        self.dfs_util(start, visited, traversal)

        return traversal

if __name__ == "__main__":
    # Create a graph
    g = Graph()
    g.add_edge(0, 1)
    g.add_edge(0, 2)
    g.add_edge(1, 2)
    g.add_edge(2, 0)
    g.add_edge(2, 3)
    g.add_edge(3, 3)

    # Perform DFS traversal starting from vertex 2
    print("DFS Traversal starting from vertex 2:", g.dfs(2))
